    public void Cage(int x, int y, Level level) throws IOException {
        int l = -1;
        int b = -1;
        int t = -1;
        for (int i = 0; i < level.lions.size(); i++) {
            if (level.lions.get(i).x == x && level.lions.get(i).y == y) {
                l = i;
                break;
            }
        }
        if (l == -1) {
            for (int i = 0; i < level.bears.size(); i++) {
                if (level.bears.get(i).x == x && level.bears.get(i).y == y) {
                    b = i;
                    break;
                }
            }
            if (b == -1) {
                for (int i = 0; i < level.tigers.size(); i++) {
                    if (level.tigers.get(i).x == x && level.tigers.get(i).y == y) {
                        t = i;
                        break;
                    }
                }
            }
        }
        if (l == -1 && t == -1 && b == -1) {
            System.out.println("There is no wild animal in that coordination, choose wisely!");
        } else if (l != -1) {
            level.lions.get(l).cageCounter++;
            if (level.lions.get(l).cageCounter == level.lions.get(l).cageP){
                level.lions.get(l).inCage = true;
            }
            level.lions.get(l).cagePlus = true;
        } else if (b != -1) {
            level.bears.get(b).cageCounter++;
            if (level.bears.get(l).cageCounter == level.bears.get(l).cageP){
                level.bears.get(l).inCage = true;
            }
            level.bears.get(l).cagePlus = true;
        } else if (t != -1) {
            level.tigers.get(t).cageCounter++;
            if (level.tigers.get(l).cageCounter == level.tigers.get(l).cageP){
                level.tigers.get(l).inCage = true;
            }
            level.tigers.get(l).cagePlus = true;
        }
        save();
    }

    public void CageCounter(Level level) throws IOException {
        for (int i = 0; i < level.lions.size(); i++) {
            if (!level.lions.get(i).cagePlus) {
                if (level.lions.get(i).cageCounter > 0)
                    level.lions.get(i).cageCounter--;
            }
        }
        for (int i = 0; i < level.bears.size(); i++) {
            if (!level.bears.get(i).cagePlus) {
                if (level.bears.get(i).cageCounter > 0)
                    level.bears.get(i).cageCounter--;
            }
        }
        for (int i = 0; i < level.tigers.size(); i++) {
            if (!level.tigers.get(i).cagePlus) {
                if (level.tigers.get(i).cageCounter > 0)
                    level.tigers.get(i).cageCounter--;
            }
        }
        save();

    }

    public void InCageCounter(Level level) throws IOException {
        for (int i = 0; i < level.lions.size(); i++) {
            if (level.lions.get(i).inCage) {
                level.lions.get(i).inCageCounter++;
            }
        }
        for (int i = 0; i < level.bears.size(); i++) {
            if (level.bears.get(i).inCage) {
                level.bears.get(i).inCageCounter++;
            }
        }
        for (int i = 0; i < level.tigers.size(); i++) {
            if (level.tigers.get(i).inCage) {
                level.tigers.get(i).inCageCounter++;
            }
        }
        save();
    }

    public void CageEnd(Level level) throws IOException {
        int e = level.lions.size();
        for (int i = e - 1; i >= 0; i--) {
            if (level.lions.get(i).inCageCounter == 5) {
                level.lions.remove(i);
            }
        }
        e = level.bears.size();
        for (int i = e - 1; i >= 0; i--) {
            if (level.bears.get(i).inCageCounter == 5) {
                level.bears.remove(i);
            }
        }
        e = level.tigers.size();
        for (int i = e - 1; i >= 0; i--) {
            if (level.tigers.get(i).inCageCounter == 5) {
                level.tigers.remove(i);
            }
        }
        save();
    }

    public void CageStore(Level level) throws IOException {
        for (int i = 0; i < level.lions.size(); i++) {
            if (level.lions.get(i).inCage) {
                if (level.storage.capacity >= level.lions.get(i).capacity) {
                    level.storage.names.add("lion");
                    level.storage.quantities.add(1);
                    level.storage.capacity -= level.lions.get(i).capacity;
                    level.lions.remove(i);
                }
            }
        }
        for (int i = 0; i < level.bears.size(); i++) {
            if (level.bears.get(i).inCage) {
                if (level.storage.capacity >= level.bears.get(i).capacity) {
                    level.storage.names.add("bear");
                    level.storage.quantities.add(1);
                    level.storage.capacity -= level.bears.get(i).capacity;
                    level.bears.remove(i);
                }
            }
        }
        for (int i = 0; i < level.tigers.size(); i++) {
            if (level.tigers.get(i).inCage) {
                if (level.storage.capacity >= level.tigers.get(i).capacity) {
                    level.storage.names.add("tiger");
                    level.storage.quantities.add(1);
                    level.storage.capacity -= level.tigers.get(i).capacity;
                    level.tigers.remove(i);
                }
            }
        }
        save();
    }
